package com.serverless.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import java.util.Objects;

@DynamoDBTable(tableName = "exam_table")
public class Exam {

  private String id;

  private String studentId;

  private String subjectId;

  private String timeStart;

  private String timeEnd;

  private String room;

  @DynamoDBHashKey(attributeName = "id")
  @DynamoDBAutoGeneratedKey
  public String getId() {
    return id;
  }

  @DynamoDBAttribute(attributeName = "student_id")
  public String getStudentId() {
    return studentId;
  }

  @DynamoDBAttribute(attributeName = "subject_id")
  public String getSubjectId() {
    return subjectId;
  }

  @DynamoDBAttribute(attributeName = "time_start")
  public String getTimeStart() {
    return timeStart;
  }

  @DynamoDBAttribute(attributeName = "time_end")
  public String getTimeEnd() {
    return timeEnd;
  }

  @DynamoDBAttribute(attributeName = "room")
  public String getRoom() {
    return room;
  }

  public void setId(String id) {
    this.id = id;
  }

  public void setStudentId(String studentId) {
    this.studentId = studentId;
  }

  public void setSubjectId(String subjectId) {
    this.subjectId = subjectId;
  }

  public void setTimeStart(String timeStart) {
    this.timeStart = timeStart;
  }

  public void setTimeEnd(String timeEnd) {
    this.timeEnd = timeEnd;
  }

  public void setRoom(String room) {
    this.room = room;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Exam exam = (Exam) o;
    return Objects.equals(studentId, exam.studentId) && Objects.equals(subjectId,
        exam.subjectId) && Objects.equals(timeStart, exam.timeStart)
        && Objects.equals(timeEnd, exam.timeEnd) && Objects.equals(room,
        exam.room);
  }

  @Override
  public int hashCode() {
    return Objects.hash(studentId, subjectId, timeStart, timeEnd, room);
  }
}
