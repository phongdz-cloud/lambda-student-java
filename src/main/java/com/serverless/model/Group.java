package com.serverless.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import java.io.Serializable;
import java.util.Objects;

@DynamoDBTable(tableName = "group_table")
public class Group implements Serializable {

  private String id;

  private String subjectId;

  private String teacherId;

  private String studentId;

  private String lession;

  @DynamoDBHashKey(attributeName = "id")
  @DynamoDBAutoGeneratedKey
  public String getId() {
    return id;
  }

  @DynamoDBAttribute(attributeName = "subject_id")
  public String getSubjectId() {
    return subjectId;
  }

  @DynamoDBAttribute(attributeName = "teacher_id")
  public String getTeacherId() {
    return teacherId;
  }

  @DynamoDBAttribute(attributeName = "student_id")
  public String getStudentId() {
    return studentId;
  }

  @DynamoDBAttribute(attributeName = "lession")
  public String getLession() {
    return lession;
  }

  public void setId(String id) {
    this.id = id;
  }

  public void setSubjectId(String subjectId) {
    this.subjectId = subjectId;
  }

  public void setTeacherId(String teacherId) {
    this.teacherId = teacherId;
  }

  public void setStudentId(String studentId) {
    this.studentId = studentId;
  }

  public void setLession(String lession) {
    this.lession = lession;
  }

  @Override
  public String toString() {
    return "Group{" +
        "id='" + id + '\'' +
        ", subjectId='" + subjectId + '\'' +
        ", teacherId='" + teacherId + '\'' +
        ", studentId='" + studentId + '\'' +
        ", lession='" + lession + '\'' +
        '}';
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Group group = (Group) o;
    return Objects.equals(subjectId, group.subjectId) && Objects.equals(teacherId,
        group.teacherId) && Objects.equals(studentId, group.studentId)
        && Objects.equals(lession, group.lession);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subjectId, teacherId, studentId, lession);
  }
}
