{
  "service": {
    "service": "api-student",
    "serviceObject": {
      "name": "api-student"
    },
    "provider": {
      "name": "aws",
      "runtime": "java8",
      "httpApi": {
        "cors": true
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "roleTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "userTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "studentTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "teacherTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "subjectTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "groupTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "scoreTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "examTable",
                "Arn"
              ]
            }
          ]
        }
      ],
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateRoleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-createRole"
            }
          },
          "ListRoleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listRole"
            }
          },
          "CreateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-createUser"
            }
          },
          "ListUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listUser"
            }
          },
          "GetUserByUsernameLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-getUserByUsername"
            }
          },
          "LoginUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-loginUser"
            }
          },
          "CreateStudentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-createStudent"
            }
          },
          "ListStudentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listStudent"
            }
          },
          "GetStudentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-getStudent"
            }
          },
          "GetStudentTokenHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-getStudentTokenHandler"
            }
          },
          "UpdateStudentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-updateStudent"
            }
          },
          "DeleteStudentHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-deleteStudentHandler"
            }
          },
          "CreateTeacherLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-createTeacher"
            }
          },
          "ListTeacherLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listTeacher"
            }
          },
          "GetTeacherLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-getTeacher"
            }
          },
          "GetTeacherTokenHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-getTeacherTokenHandler"
            }
          },
          "DeleteTeacherHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-deleteTeacherHandler"
            }
          },
          "UpdateTeacherLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-updateTeacher"
            }
          },
          "CreateSubjectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-createSubject"
            }
          },
          "ListSubjectsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listSubjects"
            }
          },
          "CreateGroupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-createGroup"
            }
          },
          "ListGroupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listGroup"
            }
          },
          "ListStudentGroupsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listStudentGroups"
            }
          },
          "ListTeacherGroupsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listTeacherGroups"
            }
          },
          "ListTeacherGroupBySubjectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listTeacherGroupBySubject"
            }
          },
          "CreateScoreLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-createScore"
            }
          },
          "ListScoreLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listScore"
            }
          },
          "GetScoreLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-getScore"
            }
          },
          "UpdateScoreLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-updateScore"
            }
          },
          "DeleteScoreHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-deleteScoreHandler"
            }
          },
          "CreateExamLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-createExam"
            }
          },
          "ListExamLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-listExam"
            }
          },
          "GetExamLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-getExam"
            }
          },
          "UpdateExamLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-updateExam"
            }
          },
          "DeleteExamHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-student-dev-deleteExamHandler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "api-student",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-student-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-student-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api-student",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::802587217904:root"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": "ServerlessEnterprise-6949c58a-4e62-40e6-bf87-507744790091"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LogFilterAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:FilterLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "CreateRoleLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListRoleLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateUserLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListUserLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetUserByUsernameLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "LoginUserLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateStudentLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListStudentLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetStudentLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetStudentTokenHandlerLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateStudentLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeleteStudentHandlerLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateTeacherLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListTeacherLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetTeacherLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetTeacherTokenHandlerLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeleteTeacherHandlerLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateTeacherLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateSubjectLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListSubjectsLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateGroupLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListGroupLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListStudentGroupsLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListTeacherGroupsLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListTeacherGroupBySubjectLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateScoreLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListScoreLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetScoreLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateScoreLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeleteScoreHandlerLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateExamLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ListExamLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetExamLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateExamLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeleteExamHandlerLogGroup",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CreateRoleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.RoleHandler.CreateRoleHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-createRole",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateRoleLogGroup"
            ]
          },
          "ListRoleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.RoleHandler.ListRoleHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listRole",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListRoleLogGroup"
            ]
          },
          "CreateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.UserHandler.CreateUserHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-createUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateUserLogGroup"
            ]
          },
          "ListUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.UserHandler.ListUserHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListUserLogGroup"
            ]
          },
          "GetUserByUsernameLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.UserHandler.GetUserHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-getUserByUsername",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUserByUsernameLogGroup"
            ]
          },
          "LoginUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.UserHandler.LoginUserHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-loginUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginUserLogGroup"
            ]
          },
          "CreateStudentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.StudentHandler.CreateStudentHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-createStudent",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateStudentLogGroup"
            ]
          },
          "ListStudentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.StudentHandler.ListStudentHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listStudent",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListStudentLogGroup"
            ]
          },
          "GetStudentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.StudentHandler.GetStudentHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-getStudent",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetStudentLogGroup"
            ]
          },
          "GetStudentTokenHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.StudentHandler.GetStudentTokenHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-getStudentTokenHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetStudentTokenHandlerLogGroup"
            ]
          },
          "UpdateStudentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.StudentHandler.UpdateStudentHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-updateStudent",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateStudentLogGroup"
            ]
          },
          "DeleteStudentHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.StudentHandler.DeleteStudentHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-deleteStudentHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteStudentHandlerLogGroup"
            ]
          },
          "CreateTeacherLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.TeacherHandler.CreateTeacherHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-createTeacher",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateTeacherLogGroup"
            ]
          },
          "ListTeacherLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.TeacherHandler.ListTeacherHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listTeacher",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListTeacherLogGroup"
            ]
          },
          "GetTeacherLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.TeacherHandler.GetTeacherHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-getTeacher",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetTeacherLogGroup"
            ]
          },
          "GetTeacherTokenHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.TeacherHandler.GetTeacherTokenHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-getTeacherTokenHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetTeacherTokenHandlerLogGroup"
            ]
          },
          "DeleteTeacherHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.TeacherHandler.DeleteTeacherHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-deleteTeacherHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteTeacherHandlerLogGroup"
            ]
          },
          "UpdateTeacherLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.TeacherHandler.UpdateTeacherHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-updateTeacher",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateTeacherLogGroup"
            ]
          },
          "CreateSubjectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.SubjectHandler.CreateSubjectHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-createSubject",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateSubjectLogGroup"
            ]
          },
          "ListSubjectsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.SubjectHandler.ListSubjectHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listSubjects",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListSubjectsLogGroup"
            ]
          },
          "CreateGroupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.GroupHandler.CreateGroupHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-createGroup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateGroupLogGroup"
            ]
          },
          "ListGroupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.GroupHandler.ListGroupHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listGroup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListGroupLogGroup"
            ]
          },
          "ListStudentGroupsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.GroupHandler.ListGroupStudentHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listStudentGroups",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListStudentGroupsLogGroup"
            ]
          },
          "ListTeacherGroupsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.GroupHandler.ListGroupTeacherHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listTeacherGroups",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListTeacherGroupsLogGroup"
            ]
          },
          "ListTeacherGroupBySubjectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.GroupHandler.ListGroupTeacherByIdHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listTeacherGroupBySubject",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListTeacherGroupBySubjectLogGroup"
            ]
          },
          "CreateScoreLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ScoreHandler.CreateScoreHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-createScore",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateScoreLogGroup"
            ]
          },
          "ListScoreLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ScoreHandler.ListScoreHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listScore",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListScoreLogGroup"
            ]
          },
          "GetScoreLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ScoreHandler.GetScoreHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-getScore",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetScoreLogGroup"
            ]
          },
          "UpdateScoreLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ScoreHandler.UpdateScoreHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-updateScore",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateScoreLogGroup"
            ]
          },
          "DeleteScoreHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ScoreHandler.DeleteScoreHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-deleteScoreHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteScoreHandlerLogGroup"
            ]
          },
          "CreateExamLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ExamHandler.CreateExamHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-createExam",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateExamLogGroup"
            ]
          },
          "ListExamLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ExamHandler.ListExamHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-listExam",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListExamLogGroup"
            ]
          },
          "GetExamLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ExamHandler.GetExamHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-getExam",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetExamLogGroup"
            ]
          },
          "UpdateExamLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ExamHandler.UpdateExamHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-updateExam",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateExamLogGroup"
            ]
          },
          "DeleteExamHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/build/distributions/hello.zip"
              },
              "Handler": "com.serverless.handler.ExamHandler.DeleteExamHandler",
              "Runtime": "java8",
              "FunctionName": "api-student-dev-deleteExamHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteExamHandlerLogGroup"
            ]
          },
          "ListUserLambdaVersionSiFqEj0OcFo1CfVTxrzi9L8OIkvsvNYfgiZmn83TNU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListUserLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "CreateUserLambdaVersionhQ889m22lhativSN61bTxUDzgN5Scqlo7XM8HM2L5zE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUserLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "CreateRoleLambdaVersionWuRStmseSmBFuXVeGDyWh1JE3T5MaBnyh2n8bxTqLcs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateRoleLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListRoleLambdaVersionsMi0qPsMy4zpLG4kKtnuT41jSoKFUJdPSgjwpUK8Fk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListRoleLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "GetUserByUsernameLambdaVersionpCt009Hz9PvFYhwVOACD0SFHgORI1pSGwdbDOOqD4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserByUsernameLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "CreateStudentLambdaVersion97WtpiSbg5a2xiYURpslulgsdrZ8AaXgCxES43K78": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateStudentLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "LoginUserLambdaVersion7my4LptpkMkEbTO87dd2vhpNOFC1yhTmRMLoTv9eMlM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginUserLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListStudentLambdaVersionhAdj4QJJ44pOLZ3q9kdLoLUZhnQZseNmlBIdoYlqzg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListStudentLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "GetStudentLambdaVersioneQqUzjpLur5BolEmT3V4bQ1Bzsk3KTs4J25hoUXhEMU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetStudentLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "GetStudentTokenHandlerLambdaVersionTBk6bSRgcSsGSMMweMuNEQvkfbWxGGzZTcmdGpvJmXc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetStudentTokenHandlerLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "UpdateStudentLambdaVersionbN1urxmGlcqEx1q17KJtGDnJd1H4E5XJ5QxqOKtcDIg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateStudentLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "CreateTeacherLambdaVersiongpeDypC6DZO7JE51VOAQ3zgo6nQTbWqthz2sTgs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateTeacherLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListTeacherLambdaVersionUD4RX6d2TQ5MNzjZcbe5pU8HdE0b4i5iFV3aRDJeM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListTeacherLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "DeleteStudentHandlerLambdaVersionFMtXuIn39bZhbpvroJUkV4T6MOM79lNnMhoDyM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteStudentHandlerLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "GetTeacherLambdaVersion8nhPaEuPLKBaPNwoFpvEgdXMQltvP8mSSl1PVLvXuY8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTeacherLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "GetTeacherTokenHandlerLambdaVersionXdzOVvANaefSEUXwKCXMPYUXU9J2Se0gDTrpyOE76pc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTeacherTokenHandlerLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "UpdateTeacherLambdaVersionokIZCwwQBK7hrDMgH6IfRfvxNG1TNJRVo5dwao9bhmc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateTeacherLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "CreateSubjectLambdaVersionTDiGh1UPNnHuVDXDQEBB3IhTp8JlYRlsreJuFxk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateSubjectLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListSubjectsLambdaVersionZ33VdnDURsZjbuM6rGmIYTFsjGX3ekKMvTY6Pc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListSubjectsLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "CreateGroupLambdaVersionDJYANc0yW6urV3oiZyrQhPJRUQ6CJEFNPSDXxqH16s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateGroupLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListGroupLambdaVersion9azASsXzG5BaquCHU3kZYMkWH0UdSxVvMCPWsdtqNs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListGroupLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListTeacherGroupBySubjectLambdaVersionjmyiNAYPY4n5lvKaER0MBRg36RhnaIqMku2f6JtaII": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListTeacherGroupBySubjectLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListStudentGroupsLambdaVersion9ILrs310Ii6Xh7ABZhWIataqakAhk2yXeK8YUFzozU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListStudentGroupsLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "CreateScoreLambdaVersionhgEQufyJF97NCeCGo5s6VItHpreiNacjchIWRd5mU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateScoreLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListTeacherGroupsLambdaVersionPwKkwWZonnGzojjEwEFeJdNmnP1OuxwmvpzdK9XL1A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListTeacherGroupsLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "DeleteTeacherHandlerLambdaVersionURVH3QjZ4Znph3EFIFTOYEXfqBQNmwwX69ec2cqgAYk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteTeacherHandlerLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListScoreLambdaVersion5tysTGnMnMqKG4ZgJOZnoVhPlof4ij3PdzXZv6c8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListScoreLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "GetScoreLambdaVersion9cij2jIdGxyk0kl8dJGrfLYWWrtoYJdnAVv3MRegE4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetScoreLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "UpdateScoreLambdaVersionzPhBbVzKiJWIE3UXoxsdETSgmxJcreqk1UHWjAxxiE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateScoreLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "DeleteScoreHandlerLambdaVersion5L4SuXupzleJYihYPVzP9crFLIKc3oYJXf5VYkI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteScoreHandlerLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "CreateExamLambdaVersioneYOIGiROeBwdhGdsiudTnwMhau8DD6mN0S319XfKV9U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateExamLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "GetExamLambdaVersionoMK9cVrf1WlJr1FftsUccCcTGPTapnu1kk9mMCyiU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetExamLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ListExamLambdaVersionmE2J81UO6cdul9kyX6FNb44p6z3nV6VB2FV5E4p05K8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListExamLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "UpdateExamLambdaVersionmoiChPJjZqGbWecIze6TOkfansujJ1VeJNOglrjI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateExamLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "DeleteExamHandlerLambdaVersionV1I14KSNKDKkHVNmRyNIvCVLHubldcmZ81ohchSbq0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteExamHandlerLambdaFunction"
              },
              "CodeSha256": "VRf2cMxzWqirOfxG1reZs4bCalfEernOrFHFRT+gvnI="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-api-student",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceRole": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "role",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStudent": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "student",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStudentIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStudent"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStudentToken": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStudent"
              },
              "PathPart": "token",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceTeacher": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "teacher",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceTeacherIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceTeacher"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceTeacherToken": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceTeacher"
              },
              "PathPart": "token",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSubject": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "subject",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGroup": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "group",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceListstudentgroups": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "liststudentgroups",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceListteachergroups": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "listteachergroups",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceListteachergroupsIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceListteachergroups"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceScore": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "score",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceScoreIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceScore"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceExam": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "exam",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceExamIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceExam"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodRolePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRole"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateRoleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateRoleLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodRoleGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRole"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListRoleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListRoleLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUserByUsernameLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetUserByUsernameLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStudentPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceStudent"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateStudentLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateStudentLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStudentGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceStudent"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListStudentLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListStudentLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStudentIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceStudentIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetStudentLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetStudentLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStudentTokenGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceStudentToken"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetStudentTokenHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetStudentTokenHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStudentPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceStudent"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateStudentLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateStudentLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStudentIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceStudentIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteStudentHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteStudentHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTeacherPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTeacher"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateTeacherLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateTeacherLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTeacherGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTeacher"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListTeacherLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListTeacherLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTeacherIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTeacherIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetTeacherLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetTeacherLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTeacherTokenGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTeacherToken"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetTeacherTokenHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetTeacherTokenHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTeacherIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTeacherIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteTeacherHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteTeacherHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTeacherPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTeacher"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateTeacherLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateTeacherLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodSubjectPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSubject"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateSubjectLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateSubjectLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodSubjectGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSubject"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListSubjectsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListSubjectsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodGroupPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateGroupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateGroupLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodGroupGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListGroupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListGroupLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodListstudentgroupsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceListstudentgroups"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListStudentGroupsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListStudentGroupsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodListteachergroupsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceListteachergroups"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListTeacherGroupsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListTeacherGroupsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodListteachergroupsIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceListteachergroupsIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListTeacherGroupBySubjectLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListTeacherGroupBySubjectLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodScorePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceScore"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateScoreLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateScoreLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodScoreGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceScore"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListScoreLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListScoreLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodScoreIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceScoreIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetScoreLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetScoreLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodScorePut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceScore"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateScoreLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateScoreLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodScoreIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceScoreIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteScoreHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteScoreHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodExamPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceExam"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateExamLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateExamLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodExamGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceExam"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListExamLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListExamLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodExamIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceExamIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetExamLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetExamLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodExamPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceExam"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateExamLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateExamLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodExamIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceExamIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteExamHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteExamHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1637034122792": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodRolePost",
              "ApiGatewayMethodRoleGet",
              "ApiGatewayMethodUserPost",
              "ApiGatewayMethodUserGet",
              "ApiGatewayMethodUserIdVarGet",
              "ApiGatewayMethodUserLoginPost",
              "ApiGatewayMethodStudentPost",
              "ApiGatewayMethodStudentGet",
              "ApiGatewayMethodStudentIdVarGet",
              "ApiGatewayMethodStudentTokenGet",
              "ApiGatewayMethodStudentPut",
              "ApiGatewayMethodStudentIdVarDelete",
              "ApiGatewayMethodTeacherPost",
              "ApiGatewayMethodTeacherGet",
              "ApiGatewayMethodTeacherIdVarGet",
              "ApiGatewayMethodTeacherTokenGet",
              "ApiGatewayMethodTeacherIdVarDelete",
              "ApiGatewayMethodTeacherPut",
              "ApiGatewayMethodSubjectPost",
              "ApiGatewayMethodSubjectGet",
              "ApiGatewayMethodGroupPost",
              "ApiGatewayMethodGroupGet",
              "ApiGatewayMethodListstudentgroupsGet",
              "ApiGatewayMethodListteachergroupsGet",
              "ApiGatewayMethodListteachergroupsIdVarGet",
              "ApiGatewayMethodScorePost",
              "ApiGatewayMethodScoreGet",
              "ApiGatewayMethodScoreIdVarGet",
              "ApiGatewayMethodScorePut",
              "ApiGatewayMethodScoreIdVarDelete",
              "ApiGatewayMethodExamPost",
              "ApiGatewayMethodExamGet",
              "ApiGatewayMethodExamIdVarGet",
              "ApiGatewayMethodExamPut",
              "ApiGatewayMethodExamIdVarDelete"
            ]
          },
          "CreateRoleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateRoleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListRoleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListRoleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetUserByUsernameLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUserByUsernameLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateStudentLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateStudentLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListStudentLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListStudentLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetStudentLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetStudentLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetStudentTokenHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetStudentTokenHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateStudentLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateStudentLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteStudentHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteStudentHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateTeacherLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateTeacherLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListTeacherLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListTeacherLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetTeacherLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTeacherLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetTeacherTokenHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTeacherTokenHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteTeacherHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteTeacherHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateTeacherLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateTeacherLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateSubjectLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateSubjectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListSubjectsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListSubjectsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateGroupLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateGroupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListGroupLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListGroupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListStudentGroupsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListStudentGroupsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListTeacherGroupsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListTeacherGroupsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListTeacherGroupBySubjectLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListTeacherGroupBySubjectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateScoreLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateScoreLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListScoreLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListScoreLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetScoreLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetScoreLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateScoreLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateScoreLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteScoreHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteScoreHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateExamLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateExamLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListExamLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListExamLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetExamLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetExamLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateExamLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateExamLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteExamHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteExamHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGatewayLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/api-gateway/api-student-dev"
            }
          },
          "CustomApiGatewayAccountCloudWatchRole": {
            "Type": "Custom::ApiGatewayAccountRole",
            "Version": 1,
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "api-student",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "iam:",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "role/*"
                            ]
                          ]
                        },
                        "Action": [
                          "iam:AttachRolePolicy",
                          "iam:CreateRole",
                          "iam:ListAttachedRolePolicies",
                          "iam:PassRole"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "apigateway:*::/account"
                            ]
                          ]
                        },
                        "Action": [
                          "apigateway:GET",
                          "apigateway:PATCH"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z/custom-resources.zip"
              },
              "FunctionName": "api-student-dev-custom-resource-apigw-cw-role",
              "Handler": "apiGatewayCloudWatchRole/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "roleTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "role_table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "userTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "user_table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "studentTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "student_table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "teacherTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "teacher_table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "subjectTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "subject_table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "groupTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "group_table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "scoreTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "score_table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "examTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "exam_table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "CWLSubFilterCreateRoleLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateRoleLogGroup"
              }
            }
          },
          "CWLSubFilterListRoleLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListRoleLogGroup"
              }
            }
          },
          "CWLSubFilterCreateUserLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateUserLogGroup"
              }
            }
          },
          "CWLSubFilterListUserLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListUserLogGroup"
              }
            }
          },
          "CWLSubFilterGetUserByUsernameLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetUserByUsernameLogGroup"
              }
            }
          },
          "CWLSubFilterLoginUserLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "LoginUserLogGroup"
              }
            }
          },
          "CWLSubFilterCreateStudentLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateStudentLogGroup"
              }
            }
          },
          "CWLSubFilterListStudentLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListStudentLogGroup"
              }
            }
          },
          "CWLSubFilterGetStudentLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetStudentLogGroup"
              }
            }
          },
          "CWLSubFilterGetStudentTokenHandlerLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetStudentTokenHandlerLogGroup"
              }
            }
          },
          "CWLSubFilterUpdateStudentLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateStudentLogGroup"
              }
            }
          },
          "CWLSubFilterDeleteStudentHandlerLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeleteStudentHandlerLogGroup"
              }
            }
          },
          "CWLSubFilterCreateTeacherLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateTeacherLogGroup"
              }
            }
          },
          "CWLSubFilterListTeacherLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListTeacherLogGroup"
              }
            }
          },
          "CWLSubFilterGetTeacherLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetTeacherLogGroup"
              }
            }
          },
          "CWLSubFilterGetTeacherTokenHandlerLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetTeacherTokenHandlerLogGroup"
              }
            }
          },
          "CWLSubFilterDeleteTeacherHandlerLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeleteTeacherHandlerLogGroup"
              }
            }
          },
          "CWLSubFilterUpdateTeacherLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateTeacherLogGroup"
              }
            }
          },
          "CWLSubFilterCreateSubjectLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateSubjectLogGroup"
              }
            }
          },
          "CWLSubFilterListSubjectsLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListSubjectsLogGroup"
              }
            }
          },
          "CWLSubFilterCreateGroupLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateGroupLogGroup"
              }
            }
          },
          "CWLSubFilterListGroupLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListGroupLogGroup"
              }
            }
          },
          "CWLSubFilterListStudentGroupsLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListStudentGroupsLogGroup"
              }
            }
          },
          "CWLSubFilterListTeacherGroupsLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListTeacherGroupsLogGroup"
              }
            }
          },
          "CWLSubFilterListTeacherGroupBySubjectLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListTeacherGroupBySubjectLogGroup"
              }
            }
          },
          "CWLSubFilterCreateScoreLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateScoreLogGroup"
              }
            }
          },
          "CWLSubFilterListScoreLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListScoreLogGroup"
              }
            }
          },
          "CWLSubFilterGetScoreLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetScoreLogGroup"
              }
            }
          },
          "CWLSubFilterUpdateScoreLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateScoreLogGroup"
              }
            }
          },
          "CWLSubFilterDeleteScoreHandlerLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeleteScoreHandlerLogGroup"
              }
            }
          },
          "CWLSubFilterCreateExamLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateExamLogGroup"
              }
            }
          },
          "CWLSubFilterListExamLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ListExamLogGroup"
              }
            }
          },
          "CWLSubFilterGetExamLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetExamLogGroup"
              }
            }
          },
          "CWLSubFilterUpdateExamLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateExamLogGroup"
              }
            }
          },
          "CWLSubFilterDeleteExamHandlerLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeleteExamHandlerLogGroup"
              }
            }
          },
          "CWLSubFilterApiGatewayLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:6949c58a-4e62-40e6-bf87-507744790091#sbjRHGzjSs35lZZ0qx#api-student#dev",
              "FilterPattern": "\"SLS_ACCESS_LOG\"",
              "LogGroupName": {
                "Ref": "ApiGatewayLogGroup"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-api-student-dev-ServerlessDeploymentBucketName"
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Value": {
              "Fn::GetAtt": [
                "EnterpriseLogAccessIamRole",
                "Arn"
              ]
            },
            "Export": {
              "Name": "sls-api-student-dev-EnterpriseLogAccessIamRole"
            }
          },
          "ListUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListUserLambdaVersionSiFqEj0OcFo1CfVTxrzi9L8OIkvsvNYfgiZmn83TNU"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListUserLambdaFunctionQualifiedArn"
            }
          },
          "CreateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUserLambdaVersionhQ889m22lhativSN61bTxUDzgN5Scqlo7XM8HM2L5zE"
            },
            "Export": {
              "Name": "sls-api-student-dev-CreateUserLambdaFunctionQualifiedArn"
            }
          },
          "CreateRoleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateRoleLambdaVersionWuRStmseSmBFuXVeGDyWh1JE3T5MaBnyh2n8bxTqLcs"
            },
            "Export": {
              "Name": "sls-api-student-dev-CreateRoleLambdaFunctionQualifiedArn"
            }
          },
          "ListRoleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListRoleLambdaVersionsMi0qPsMy4zpLG4kKtnuT41jSoKFUJdPSgjwpUK8Fk"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListRoleLambdaFunctionQualifiedArn"
            }
          },
          "GetUserByUsernameLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserByUsernameLambdaVersionpCt009Hz9PvFYhwVOACD0SFHgORI1pSGwdbDOOqD4"
            },
            "Export": {
              "Name": "sls-api-student-dev-GetUserByUsernameLambdaFunctionQualifiedArn"
            }
          },
          "CreateStudentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateStudentLambdaVersion97WtpiSbg5a2xiYURpslulgsdrZ8AaXgCxES43K78"
            },
            "Export": {
              "Name": "sls-api-student-dev-CreateStudentLambdaFunctionQualifiedArn"
            }
          },
          "LoginUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginUserLambdaVersion7my4LptpkMkEbTO87dd2vhpNOFC1yhTmRMLoTv9eMlM"
            },
            "Export": {
              "Name": "sls-api-student-dev-LoginUserLambdaFunctionQualifiedArn"
            }
          },
          "ListStudentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListStudentLambdaVersionhAdj4QJJ44pOLZ3q9kdLoLUZhnQZseNmlBIdoYlqzg"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListStudentLambdaFunctionQualifiedArn"
            }
          },
          "GetStudentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetStudentLambdaVersioneQqUzjpLur5BolEmT3V4bQ1Bzsk3KTs4J25hoUXhEMU"
            },
            "Export": {
              "Name": "sls-api-student-dev-GetStudentLambdaFunctionQualifiedArn"
            }
          },
          "GetStudentTokenHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetStudentTokenHandlerLambdaVersionTBk6bSRgcSsGSMMweMuNEQvkfbWxGGzZTcmdGpvJmXc"
            },
            "Export": {
              "Name": "sls-api-student-dev-GetStudentTokenHandlerLambdaFunctionQualifiedArn"
            }
          },
          "UpdateStudentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateStudentLambdaVersionbN1urxmGlcqEx1q17KJtGDnJd1H4E5XJ5QxqOKtcDIg"
            },
            "Export": {
              "Name": "sls-api-student-dev-UpdateStudentLambdaFunctionQualifiedArn"
            }
          },
          "CreateTeacherLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateTeacherLambdaVersiongpeDypC6DZO7JE51VOAQ3zgo6nQTbWqthz2sTgs"
            },
            "Export": {
              "Name": "sls-api-student-dev-CreateTeacherLambdaFunctionQualifiedArn"
            }
          },
          "ListTeacherLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListTeacherLambdaVersionUD4RX6d2TQ5MNzjZcbe5pU8HdE0b4i5iFV3aRDJeM"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListTeacherLambdaFunctionQualifiedArn"
            }
          },
          "DeleteStudentHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteStudentHandlerLambdaVersionFMtXuIn39bZhbpvroJUkV4T6MOM79lNnMhoDyM"
            },
            "Export": {
              "Name": "sls-api-student-dev-DeleteStudentHandlerLambdaFunctionQualifiedArn"
            }
          },
          "GetTeacherLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTeacherLambdaVersion8nhPaEuPLKBaPNwoFpvEgdXMQltvP8mSSl1PVLvXuY8"
            },
            "Export": {
              "Name": "sls-api-student-dev-GetTeacherLambdaFunctionQualifiedArn"
            }
          },
          "GetTeacherTokenHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTeacherTokenHandlerLambdaVersionXdzOVvANaefSEUXwKCXMPYUXU9J2Se0gDTrpyOE76pc"
            },
            "Export": {
              "Name": "sls-api-student-dev-GetTeacherTokenHandlerLambdaFunctionQualifiedArn"
            }
          },
          "UpdateTeacherLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateTeacherLambdaVersionokIZCwwQBK7hrDMgH6IfRfvxNG1TNJRVo5dwao9bhmc"
            },
            "Export": {
              "Name": "sls-api-student-dev-UpdateTeacherLambdaFunctionQualifiedArn"
            }
          },
          "CreateSubjectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateSubjectLambdaVersionTDiGh1UPNnHuVDXDQEBB3IhTp8JlYRlsreJuFxk"
            },
            "Export": {
              "Name": "sls-api-student-dev-CreateSubjectLambdaFunctionQualifiedArn"
            }
          },
          "ListSubjectsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListSubjectsLambdaVersionZ33VdnDURsZjbuM6rGmIYTFsjGX3ekKMvTY6Pc"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListSubjectsLambdaFunctionQualifiedArn"
            }
          },
          "CreateGroupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateGroupLambdaVersionDJYANc0yW6urV3oiZyrQhPJRUQ6CJEFNPSDXxqH16s"
            },
            "Export": {
              "Name": "sls-api-student-dev-CreateGroupLambdaFunctionQualifiedArn"
            }
          },
          "ListGroupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListGroupLambdaVersion9azASsXzG5BaquCHU3kZYMkWH0UdSxVvMCPWsdtqNs"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListGroupLambdaFunctionQualifiedArn"
            }
          },
          "ListTeacherGroupBySubjectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListTeacherGroupBySubjectLambdaVersionjmyiNAYPY4n5lvKaER0MBRg36RhnaIqMku2f6JtaII"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListTeacherGroupBySubjectLambdaFunctionQualifiedArn"
            }
          },
          "ListStudentGroupsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListStudentGroupsLambdaVersion9ILrs310Ii6Xh7ABZhWIataqakAhk2yXeK8YUFzozU"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListStudentGroupsLambdaFunctionQualifiedArn"
            }
          },
          "CreateScoreLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateScoreLambdaVersionhgEQufyJF97NCeCGo5s6VItHpreiNacjchIWRd5mU"
            },
            "Export": {
              "Name": "sls-api-student-dev-CreateScoreLambdaFunctionQualifiedArn"
            }
          },
          "ListTeacherGroupsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListTeacherGroupsLambdaVersionPwKkwWZonnGzojjEwEFeJdNmnP1OuxwmvpzdK9XL1A"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListTeacherGroupsLambdaFunctionQualifiedArn"
            }
          },
          "DeleteTeacherHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteTeacherHandlerLambdaVersionURVH3QjZ4Znph3EFIFTOYEXfqBQNmwwX69ec2cqgAYk"
            },
            "Export": {
              "Name": "sls-api-student-dev-DeleteTeacherHandlerLambdaFunctionQualifiedArn"
            }
          },
          "ListScoreLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListScoreLambdaVersion5tysTGnMnMqKG4ZgJOZnoVhPlof4ij3PdzXZv6c8"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListScoreLambdaFunctionQualifiedArn"
            }
          },
          "GetScoreLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetScoreLambdaVersion9cij2jIdGxyk0kl8dJGrfLYWWrtoYJdnAVv3MRegE4"
            },
            "Export": {
              "Name": "sls-api-student-dev-GetScoreLambdaFunctionQualifiedArn"
            }
          },
          "UpdateScoreLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateScoreLambdaVersionzPhBbVzKiJWIE3UXoxsdETSgmxJcreqk1UHWjAxxiE"
            },
            "Export": {
              "Name": "sls-api-student-dev-UpdateScoreLambdaFunctionQualifiedArn"
            }
          },
          "DeleteScoreHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteScoreHandlerLambdaVersion5L4SuXupzleJYihYPVzP9crFLIKc3oYJXf5VYkI"
            },
            "Export": {
              "Name": "sls-api-student-dev-DeleteScoreHandlerLambdaFunctionQualifiedArn"
            }
          },
          "CreateExamLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateExamLambdaVersioneYOIGiROeBwdhGdsiudTnwMhau8DD6mN0S319XfKV9U"
            },
            "Export": {
              "Name": "sls-api-student-dev-CreateExamLambdaFunctionQualifiedArn"
            }
          },
          "GetExamLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetExamLambdaVersionoMK9cVrf1WlJr1FftsUccCcTGPTapnu1kk9mMCyiU"
            },
            "Export": {
              "Name": "sls-api-student-dev-GetExamLambdaFunctionQualifiedArn"
            }
          },
          "ListExamLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListExamLambdaVersionmE2J81UO6cdul9kyX6FNb44p6z3nV6VB2FV5E4p05K8"
            },
            "Export": {
              "Name": "sls-api-student-dev-ListExamLambdaFunctionQualifiedArn"
            }
          },
          "UpdateExamLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateExamLambdaVersionmoiChPJjZqGbWecIze6TOkfansujJ1VeJNOglrjI"
            },
            "Export": {
              "Name": "sls-api-student-dev-UpdateExamLambdaFunctionQualifiedArn"
            }
          },
          "DeleteExamHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteExamHandlerLambdaVersionV1I14KSNKDKkHVNmRyNIvCVLHubldcmZ81ohchSbq0"
            },
            "Export": {
              "Name": "sls-api-student-dev-DeleteExamHandlerLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-api-student-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "logs": {
        "restApi": {
          "format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourceId\":\"$context.resourceId\",\"resourcePath\":\"$context.resourcePath\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"status\":\"$context.status\",\"authLatency\":\"$context.authorizer.integrationLatency\",\"integrationLatency\":\"$context.integrationLatency\",\"integrationStatus\":\"$context.integrationStatus\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_ACCESS_LOG\",\"version\":\"1.0.0\"}"
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "createRole": {
        "handler": "com.serverless.handler.RoleHandler.CreateRoleHandler",
        "events": [
          {
            "http": {
              "path": "role",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-createRole",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "CreateRoleLambdaVersionWuRStmseSmBFuXVeGDyWh1JE3T5MaBnyh2n8bxTqLcs"
      },
      "listRole": {
        "handler": "com.serverless.handler.RoleHandler.ListRoleHandler",
        "events": [
          {
            "http": {
              "path": "role",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listRole",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListRoleLambdaVersionsMi0qPsMy4zpLG4kKtnuT41jSoKFUJdPSgjwpUK8Fk"
      },
      "createUser": {
        "handler": "com.serverless.handler.UserHandler.CreateUserHandler",
        "events": [
          {
            "http": {
              "path": "user",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-createUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "CreateUserLambdaVersionhQ889m22lhativSN61bTxUDzgN5Scqlo7XM8HM2L5zE"
      },
      "listUser": {
        "handler": "com.serverless.handler.UserHandler.ListUserHandler",
        "events": [
          {
            "http": {
              "path": "user",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListUserLambdaVersionSiFqEj0OcFo1CfVTxrzi9L8OIkvsvNYfgiZmn83TNU"
      },
      "getUserByUsername": {
        "handler": "com.serverless.handler.UserHandler.GetUserHandler",
        "events": [
          {
            "http": {
              "path": "user/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-getUserByUsername",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "GetUserByUsernameLambdaVersionpCt009Hz9PvFYhwVOACD0SFHgORI1pSGwdbDOOqD4"
      },
      "loginUser": {
        "handler": "com.serverless.handler.UserHandler.LoginUserHandler",
        "events": [
          {
            "http": {
              "path": "user/login",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-loginUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "LoginUserLambdaVersion7my4LptpkMkEbTO87dd2vhpNOFC1yhTmRMLoTv9eMlM"
      },
      "createStudent": {
        "handler": "com.serverless.handler.StudentHandler.CreateStudentHandler",
        "events": [
          {
            "http": {
              "path": "student",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-createStudent",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "CreateStudentLambdaVersion97WtpiSbg5a2xiYURpslulgsdrZ8AaXgCxES43K78"
      },
      "listStudent": {
        "handler": "com.serverless.handler.StudentHandler.ListStudentHandler",
        "events": [
          {
            "http": {
              "path": "student",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listStudent",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListStudentLambdaVersionhAdj4QJJ44pOLZ3q9kdLoLUZhnQZseNmlBIdoYlqzg"
      },
      "getStudent": {
        "handler": "com.serverless.handler.StudentHandler.GetStudentHandler",
        "events": [
          {
            "http": {
              "path": "student/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-getStudent",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "GetStudentLambdaVersioneQqUzjpLur5BolEmT3V4bQ1Bzsk3KTs4J25hoUXhEMU"
      },
      "getStudentTokenHandler": {
        "handler": "com.serverless.handler.StudentHandler.GetStudentTokenHandler",
        "events": [
          {
            "http": {
              "path": "student/token",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-getStudentTokenHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "GetStudentTokenHandlerLambdaVersionTBk6bSRgcSsGSMMweMuNEQvkfbWxGGzZTcmdGpvJmXc"
      },
      "updateStudent": {
        "handler": "com.serverless.handler.StudentHandler.UpdateStudentHandler",
        "events": [
          {
            "http": {
              "path": "student",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-updateStudent",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "UpdateStudentLambdaVersionbN1urxmGlcqEx1q17KJtGDnJd1H4E5XJ5QxqOKtcDIg"
      },
      "deleteStudentHandler": {
        "handler": "com.serverless.handler.StudentHandler.DeleteStudentHandler",
        "events": [
          {
            "http": {
              "path": "student/{id}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-deleteStudentHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "DeleteStudentHandlerLambdaVersionFMtXuIn39bZhbpvroJUkV4T6MOM79lNnMhoDyM"
      },
      "createTeacher": {
        "handler": "com.serverless.handler.TeacherHandler.CreateTeacherHandler",
        "events": [
          {
            "http": {
              "path": "teacher",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-createTeacher",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "CreateTeacherLambdaVersiongpeDypC6DZO7JE51VOAQ3zgo6nQTbWqthz2sTgs"
      },
      "listTeacher": {
        "handler": "com.serverless.handler.TeacherHandler.ListTeacherHandler",
        "events": [
          {
            "http": {
              "path": "teacher",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listTeacher",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListTeacherLambdaVersionUD4RX6d2TQ5MNzjZcbe5pU8HdE0b4i5iFV3aRDJeM"
      },
      "getTeacher": {
        "handler": "com.serverless.handler.TeacherHandler.GetTeacherHandler",
        "events": [
          {
            "http": {
              "path": "teacher/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-getTeacher",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "GetTeacherLambdaVersion8nhPaEuPLKBaPNwoFpvEgdXMQltvP8mSSl1PVLvXuY8"
      },
      "getTeacherTokenHandler": {
        "handler": "com.serverless.handler.TeacherHandler.GetTeacherTokenHandler",
        "events": [
          {
            "http": {
              "path": "teacher/token",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-getTeacherTokenHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "GetTeacherTokenHandlerLambdaVersionXdzOVvANaefSEUXwKCXMPYUXU9J2Se0gDTrpyOE76pc"
      },
      "deleteTeacherHandler": {
        "handler": "com.serverless.handler.TeacherHandler.DeleteTeacherHandler",
        "events": [
          {
            "http": {
              "path": "teacher/{id}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-deleteTeacherHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "DeleteTeacherHandlerLambdaVersionURVH3QjZ4Znph3EFIFTOYEXfqBQNmwwX69ec2cqgAYk"
      },
      "updateTeacher": {
        "handler": "com.serverless.handler.TeacherHandler.UpdateTeacherHandler",
        "events": [
          {
            "http": {
              "path": "teacher",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-updateTeacher",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "UpdateTeacherLambdaVersionokIZCwwQBK7hrDMgH6IfRfvxNG1TNJRVo5dwao9bhmc"
      },
      "createSubject": {
        "handler": "com.serverless.handler.SubjectHandler.CreateSubjectHandler",
        "events": [
          {
            "http": {
              "path": "subject",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-createSubject",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "CreateSubjectLambdaVersionTDiGh1UPNnHuVDXDQEBB3IhTp8JlYRlsreJuFxk"
      },
      "listSubjects": {
        "handler": "com.serverless.handler.SubjectHandler.ListSubjectHandler",
        "events": [
          {
            "http": {
              "path": "subject",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listSubjects",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListSubjectsLambdaVersionZ33VdnDURsZjbuM6rGmIYTFsjGX3ekKMvTY6Pc"
      },
      "createGroup": {
        "handler": "com.serverless.handler.GroupHandler.CreateGroupHandler",
        "events": [
          {
            "http": {
              "path": "group",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-createGroup",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "CreateGroupLambdaVersionDJYANc0yW6urV3oiZyrQhPJRUQ6CJEFNPSDXxqH16s"
      },
      "listGroup": {
        "handler": "com.serverless.handler.GroupHandler.ListGroupHandler",
        "events": [
          {
            "http": {
              "path": "group",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listGroup",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListGroupLambdaVersion9azASsXzG5BaquCHU3kZYMkWH0UdSxVvMCPWsdtqNs"
      },
      "listStudentGroups": {
        "handler": "com.serverless.handler.GroupHandler.ListGroupStudentHandler",
        "events": [
          {
            "http": {
              "path": "liststudentgroups",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listStudentGroups",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListStudentGroupsLambdaVersion9ILrs310Ii6Xh7ABZhWIataqakAhk2yXeK8YUFzozU"
      },
      "listTeacherGroups": {
        "handler": "com.serverless.handler.GroupHandler.ListGroupTeacherHandler",
        "events": [
          {
            "http": {
              "path": "listteachergroups",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listTeacherGroups",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListTeacherGroupsLambdaVersionPwKkwWZonnGzojjEwEFeJdNmnP1OuxwmvpzdK9XL1A"
      },
      "listTeacherGroupBySubject": {
        "handler": "com.serverless.handler.GroupHandler.ListGroupTeacherByIdHandler",
        "events": [
          {
            "http": {
              "path": "listteachergroups/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listTeacherGroupBySubject",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListTeacherGroupBySubjectLambdaVersionjmyiNAYPY4n5lvKaER0MBRg36RhnaIqMku2f6JtaII"
      },
      "createScore": {
        "handler": "com.serverless.handler.ScoreHandler.CreateScoreHandler",
        "events": [
          {
            "http": {
              "path": "score",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-createScore",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "CreateScoreLambdaVersionhgEQufyJF97NCeCGo5s6VItHpreiNacjchIWRd5mU"
      },
      "listScore": {
        "handler": "com.serverless.handler.ScoreHandler.ListScoreHandler",
        "events": [
          {
            "http": {
              "path": "score",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listScore",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListScoreLambdaVersion5tysTGnMnMqKG4ZgJOZnoVhPlof4ij3PdzXZv6c8"
      },
      "getScore": {
        "handler": "com.serverless.handler.ScoreHandler.GetScoreHandler",
        "events": [
          {
            "http": {
              "path": "score/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-getScore",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "GetScoreLambdaVersion9cij2jIdGxyk0kl8dJGrfLYWWrtoYJdnAVv3MRegE4"
      },
      "updateScore": {
        "handler": "com.serverless.handler.ScoreHandler.UpdateScoreHandler",
        "events": [
          {
            "http": {
              "path": "score",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-updateScore",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "UpdateScoreLambdaVersionzPhBbVzKiJWIE3UXoxsdETSgmxJcreqk1UHWjAxxiE"
      },
      "deleteScoreHandler": {
        "handler": "com.serverless.handler.ScoreHandler.DeleteScoreHandler",
        "events": [
          {
            "http": {
              "path": "score/{id}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-deleteScoreHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "DeleteScoreHandlerLambdaVersion5L4SuXupzleJYihYPVzP9crFLIKc3oYJXf5VYkI"
      },
      "createExam": {
        "handler": "com.serverless.handler.ExamHandler.CreateExamHandler",
        "events": [
          {
            "http": {
              "path": "exam",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-createExam",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "CreateExamLambdaVersioneYOIGiROeBwdhGdsiudTnwMhau8DD6mN0S319XfKV9U"
      },
      "listExam": {
        "handler": "com.serverless.handler.ExamHandler.ListExamHandler",
        "events": [
          {
            "http": {
              "path": "exam",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-listExam",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "ListExamLambdaVersionmE2J81UO6cdul9kyX6FNb44p6z3nV6VB2FV5E4p05K8"
      },
      "getExam": {
        "handler": "com.serverless.handler.ExamHandler.GetExamHandler",
        "events": [
          {
            "http": {
              "path": "exam/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-getExam",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "GetExamLambdaVersionoMK9cVrf1WlJr1FftsUccCcTGPTapnu1kk9mMCyiU"
      },
      "updateExam": {
        "handler": "com.serverless.handler.ExamHandler.UpdateExamHandler",
        "events": [
          {
            "http": {
              "path": "exam",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-updateExam",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "UpdateExamLambdaVersionmoiChPJjZqGbWecIze6TOkfansujJ1VeJNOglrjI"
      },
      "deleteExamHandler": {
        "handler": "com.serverless.handler.ExamHandler.DeleteExamHandler",
        "events": [
          {
            "http": {
              "path": "exam/{id}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-student-dev-deleteExamHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java8",
        "vpc": {},
        "versionLogicalId": "DeleteExamHandlerLambdaVersionV1I14KSNKDKkHVNmRyNIvCVLHubldcmZ81ohchSbq0"
      }
    },
    "resources": {
      "Resources": {
        "roleTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "role_table",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "userTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "user_table",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "studentTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "student_table",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "teacherTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "teacher_table",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "subjectTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "subject_table",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "groupTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "group_table",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "scoreTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "score_table",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "examTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "exam_table",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "app": "student",
      "org": "longtam20015",
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "artifact": "build/distributions/hello.zip",
        "include": [
          "s_*.js",
          "serverless_sdk/**"
        ],
        "artifactDirectoryName": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "app": "student",
    "org": "longtam20015",
    "layers": {},
    "isDashboardMonitoringPreconfigured": true,
    "isDashboardAppPreconfigured": true,
    "orgUid": "6949c58a-4e62-40e6-bf87-507744790091",
    "appUid": "sbjRHGzjSs35lZZ0qx"
  },
  "package": {
    "artifactDirectoryName": "serverless/api-student/dev/1637034130622-2021-11-16T03:42:10.622Z",
    "artifact": "build/distributions/hello.zip"
  }
}